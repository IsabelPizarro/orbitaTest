{"version":3,"sources":["components/Header.js","components/Cities.js","components/FavoritesCities.js","components/App.js","index.js"],"names":["Header","className","Cities","props","city","handleInputFavs","i","key","name","id","type","value","chineseName","onChange","FavoriteCities","favoritesCities","handleClearFav","selectNothing","length","onClick","map","cityFav","kei","cityChineseName","cityEnglishName","App","state","allCities","hasMore","number","getCities","bind","handleFilter","selectAll","changeNumber","this","fetch","then","response","json","data","setState","cities","event","lookFor","currentTarget","target","checked","englishandchinese","push","todelete","deleteItem","isNaN","document","getElementById","remove","splice","allChecks","querySelectorAll","emptyAll","todos","citiesPag","filter","n","loader","class","role","nameCity","toLowerCase","includes","FavoritesCities","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.b3d1baae.chunk.js","sourcesContent":["\nimport React from \"react\";\n\nconst Header = () => {\n    return (\n        <header className=\"header__wrapper\">\n            <h1 className=\"header__title\">Cities of China</h1>\n            <hr />\n        </header>\n    )\n}\n\nexport default Header;","import React from \"react\";\n\n\n\nconst Cities = props => {\n  const { city, handleInputFavs, i} = props;\n  \n\n    return (\n      <div >\n          <div className=\"containerList\">\n          \n    \n          <ul className=\"ulList\">\n    <li className=\"citiesList list-group-item\"   key={city.name} id={city.id}> <input type=\"checkbox\" value={city.chineseName}  className=\"checkboxes\" key={i} id={city.name} onChange={handleInputFavs}/> <h6>{city.name}</h6><h5>{city.chineseName}</h5> </li>\n            </ul>\n            </div>\n            \n            </div>\n          \n\n    );\n  };\n  \n  export default Cities;\n","import React from \"react\";\n\n\nconst FavoriteCities = props => {\n  // console.log(props);\n\n   const{favoritesCities, handleClearFav,selectNothing}= props;\n \n//  console.log(favoritesCities);\n\n   return (\n     <div >\n     {/* <h1>hola</h1> */}\n     <div>\n     <span className=\"badge badge-primary badge-pill\">{favoritesCities.length}</span>\n     <button type=\"button\" className=\"btn btn-link nothing\"onClick={selectNothing}>Clear</button>\n     </div>\n     <ul className=\"ulFavoritesCities\">\n      \n        {favoritesCities.map((cityFav, i)=>\n<li kei={i} className=\"list-group-item\" id={cityFav.cityChineseName}><h6>{cityFav.cityEnglishName}</h6><h5>{cityFav.cityChineseName}</h5>\n         <button type=\"text\" onClick={handleClearFav} className={cityFav.cityEnglishName} id={i}>x</button></li>)} \n        \n     </ul>\n     </div>\n   );\n };\n\n\n\n\nexport default FavoriteCities;","import  { Component } from 'react';\nimport React from \"react\";\nimport Header from \"./Header\";\nimport Cities from \"./Cities\";\nimport FavoritesCities from \"./FavoritesCities\";\nimport \"../App.css\";\n\nconst citiesData = \"./Services/cities-of-china.json\";\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allCities: [],\n      hasMore: true,\n      number:20,\n      city: [],\n      value:\"\",\n      favoritesCities:[]\n      \n     };\nthis.getCities=this.getCities.bind(this);\nthis.handleFilter=this.handleFilter.bind(this);\nthis.handleInputFavs=this.handleInputFavs.bind(this);\nthis.handleClearFav=this.handleClearFav.bind(this);\nthis.selectAll=this.selectAll.bind(this);\nthis.selectNothing=this.selectNothing.bind(this);\nthis.changeNumber=this.changeNumber.bind(this);\n    \n    }\n\n    componentDidMount() {\n      this.getCities(); \n    }\n   \n    \n    getCities() {\n      fetch(citiesData)\n        .then(response => response.json())\n        .then(data => {\n          this.setState({allCities:data.cities})    \n        });\n       \n    }\n\n    handleFilter(event){\n     const lookFor=event.currentTarget.value;\n     this.setState({\n       value:lookFor  \n     })\n\n    }\n\n    changeNumber(){\n     this.setState({number:this.state.number+20})\n    }\n\n    \n    handleInputFavs (event){\n     let target=event.target;\n     if ( target.type === 'checkbox' ? target.checked : target.value){\n      let englishandchinese={\n        cityChineseName:event.target.value,\n        cityEnglishName:event.target.id,  \n      }\n      this.state.favoritesCities.push(englishandchinese);\n          this.setState( { \n            favoritesCities: this.state.favoritesCities\n          });\n     }\n     else {\n       this.handleClearFav(event);\n    }\n  }\n\n    handleClearFav(event){\n  \n     const todelete=event.target.id;\n     const deleteItem=event.target.value;\n    \n     if(isNaN(todelete)){\n    \n      const elementToDelete=document.getElementById(deleteItem);\n      elementToDelete.remove();\n     }else {\n     this.state.favoritesCities.splice(todelete,1);\n      this.setState( {\n            favoritesCities: this.state.favoritesCities\n      \n    });\n    const descheck=document.getElementById(event.target.className);\n    descheck.checked=0}\n  \n     }\n    \n      selectAll (event){\n \n       const allChecks= document.querySelectorAll(\".checkboxes\");\n        for (let i = 0; i < allChecks.length; i++) {\n              if(allChecks[i] === \"checkbox\");\n                allChecks[i].checked=1\n                let emptyAll={\n                  cityChineseName:allChecks[i].value,\n                  cityEnglishName:allChecks[i].id\n                }\n          \n                this.state.favoritesCities.push(emptyAll);\n      \n        this.setState( {\n               favoritesCities: this.state.favoritesCities\n        });\n      }\n\n       }\n       selectNothing(){\n        const todos= document.querySelectorAll(\".checkboxes\");\n           for (let i = 0; i < todos.length; i++) {\n              if(todos[i] === \"checkbox\");\n                todos[i].checked=0}\n                this.setState( {\n                  favoritesCities: []\n                });\n\n       }\n  \n\n\n\n  render() {\n      const  {allCities,favoritesCities,number} =this.state;\n      const citiesPag=allCities.filter((n,i)=>[i]<number);\n      const loader = <div className=\"loader\">Loading<div class=\"spinner-border text-primary\" role=\"status\">\n      <span class=\"sr-only\">Loading...</span>\n    </div></div>;\n\n    return (\n      <div className=\"App\">\n        <Header/>\n        <div>\n          <input type=\"text\" onChange={this.handleFilter}></input>\n\n          \n      \n          <div className=\"containerBothList\">\n          <div className=\"containerMainList\">\n    <p><span className=\"badge badge-primary badge-pill\">{citiesPag.length}</span></p>\n    <button type=\"button\" className=\"btn btn-link all\" onClick={this.selectAll}>Seleccionar Todo</button>\n          {citiesPag.filter(nameCity=>nameCity.name.toLowerCase().includes(this.state.value.toLowerCase()))\n           .map((city,i)=>(\n            (city === \"\") ? {loader}  :\n            <Cities  city={city} handleInputFavs={this.handleInputFavs} changeNumber={this.changeNumber} i={i}/> \n        ))}\n\n            <button type=\"button\" className=\"btn btn-primary\" onClick={this.changeNumber}>Next Page</button>\n            </div>\n            \n          \n         <FavoritesCities  favoritesCities={favoritesCities} selectNothing={this.selectNothing} handleClearFav={this.handleClearFav}/>\n         </div>\n         </div>\n      </div>\n    )\n}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}